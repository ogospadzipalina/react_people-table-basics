{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","sex","name","PeopleTable","people","personSlug","useParams","selectedPerson","find","map","undefined","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","fetchData","fetchedPeople","peopleWithParents","element","length","HomePage","NotFoundPage","App","role","isActive","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3ba4c806.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ntype PersonLinkProps = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<PersonLinkProps> = (\n  { person },\n) => {\n  return (\n    <td>\n      <Link\n        to={`/people/${person.slug}`}\n        className={person.sex === 'f' ? 'has-text-danger' : ''}\n      >\n        {person.name}\n      </Link>\n    </td>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\n\ntype PeopleTableProps = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<PeopleTableProps> = (\n  { people },\n) => {\n  const { personSlug } = useParams();\n\n  const selectedPerson = people.find(person => person.slug === personSlug);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={person.slug === selectedPerson?.slug\n              ? 'has-background-warning' : undefined}\n          >\n            <PersonLink\n              person={person}\n            />\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            {person.mother\n              ? (\n                <PersonLink\n                  person={person.mother}\n                />\n              )\n              : (\n                <td>\n                  {person.motherName !== null\n                    ? person.motherName : '-'}\n                </td>\n              )}\n            {person.father\n              ? (\n                <PersonLink\n                  person={person.father}\n                />\n              )\n              : (\n                <td>\n                  {person.fatherName !== null\n                    ? person.fatherName : '-'}\n                </td>\n              )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const fetchedPeople = await getPeople();\n\n        setPeople(fetchedPeople);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const peopleWithParents = people.map(person => {\n    const mother = people.find(element => element.name === person.motherName);\n    const father = people.find(element => element.name === person.fatherName);\n\n    return { ...person, mother, father };\n  });\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading && <Loader />}\n\n            {isError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n            {people.length === 0 && !isLoading && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n            {people.length > 0\n        && (\n          <PeopleTable people={peopleWithParents} />)}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","export const NotFoundPage: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  </main>\n);\n","import {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => (isActive\n              ? 'navbar-item has-background-grey-lighter'\n              : 'navbar-item')}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => (isActive\n              ? 'navbar-item has-background-grey-lighter'\n              : 'navbar-item')}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <HomePage />\n        }\n      />\n\n      <Route\n        path=\"/people\"\n        element={\n          <PeoplePage />\n        }\n      />\n      <Route\n        path=\"/people/:personSlug\"\n        element={\n          <PeoplePage />\n        }\n      />\n\n      <Route\n        path=\"/home\"\n        element={\n          <Navigate to=\"/\" replace />\n        }\n      />\n\n      <Route\n        path=\"*\"\n        element={\n          <NotFoundPage />\n        }\n      />\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}